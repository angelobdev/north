server {
    listen       80;
    listen  [::]:80;
    server_name  _;

    location / {
        # https://enable-cors.org/server_nginx.html
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            #
            # Custom headers and headers various browsers *should* be OK with but aren't
            #
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            #
            # Tell client that this pre-flight info is valid for 20 days
            #
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        gzip off;

        root   /usr/share/nginx/html;
        index  index.html index.htm;

        
        location /nginx {
            return 403;
        }

        location /translation {
            return 403;
        }

        location ~* (.*/thumbnail)/(.+\.png)$ {
            # kill cache
            expires -1;
            etag off;
            add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';

            include conf.d/corsdefault.template;
        }

        location ~*\.(ico|pdf|flv|jpg|jpeg|png|gif|js|css|swf|nitro|mp3)$ {
            expires 4h;
            etag off;
            add_header Cache-Control "public, no-transform";

            include conf.d/corsdefault.template;
        }

        location ~*\.(json)$ {
            # kill cache
            expires -1;
            etag off;
            add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';

            include conf.d/corsdefault.template;
        }
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}